'use client';

import { useState } from 'react';

interface FAQItem {
  question: string;
  answer: string;
}

const faqItems: FAQItem[] = [
  {
    question: "Qui √™tes-vous ?",
    answer: "Nous sommes une entreprise de services informatiques sp√©cialis√©e dans la data et l'automatisation des processus m√©tiers. Nous accompagnons les entreprises dans l'analyse de leurs donn√©es, la cr√©ation de tableaux de bord, la mise en place d'ETL, d'entrep√¥ts de donn√©es, ou encore l'automatisation de t√¢ches avec des outils comme Power BI, Power Automate, etc."
  },
  {
    question: "Quels types d'entreprises accompagniez-vous ?",
    answer: "Nous collaborons avec des entreprises de toutes tailles et de tous les secteurs d'activit√©, en adaptant nos services aux sp√©cificit√©s de chaque m√©tier."
  },
  {
    question: "Comment travaillez-vous avec vos clients ?",
    answer: "Trois modes d'intervention :\n\n‚Ä¢ Mode projet : prise en charge compl√®te de la mission.\n\n‚Ä¢ Assistance technique : un de nos collaborateurs intervient directement chez le client.\n\n‚Ä¢ Recrutement pour compte de tiers : nous identifions et recrutons des profils pour votre entreprise."
  },
  {
    question: "Quels services proposez-vous ?",
    answer: "Nos prestations couvrent notamment :\n\n‚Ä¢ Cr√©ation de tableaux de bord interactifs\n\n‚Ä¢ Automatisation de t√¢ches et de processus m√©tier\n\n‚Ä¢ Mise en place de solutions ETL et entrep√¥ts de donn√©es\n\n‚Ä¢ Int√©gration d'outils d√©cisionnels adapt√©s √† votre activit√©"
  },
  {
    question: "Quels profils recrutez-vous ?",
    answer: "Nous recrutons des profils experts en data et en automatisation, notamment :\n\n‚Ä¢ Data Analysts\n\n‚Ä¢ Data Engineers\n\n‚Ä¢ D√©veloppeurs BI\n\n‚Ä¢ Sp√©cialistes Power BI, Power Automate, ETL...\n\nNous adaptons nos recrutements aux besoins sp√©cifiques de chaque mission."
  }
];

export default function FAQPage() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggleFAQ = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <div className="min-h-screen bg-background py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-primary mb-4">üí° FAQ ‚Äì Foire Aux Questions</h1>
          <p className="text-xl text-text-light">Trouvez les r√©ponses √† vos questions les plus fr√©quentes</p>
        </div>

        <div className="space-y-4">
          {faqItems.map((item, index) => (
            <div
              key={index}
              className="bg-white rounded-lg shadow-md overflow-hidden"
            >
              <button
                className="w-full px-6 py-4 text-left focus:outline-none"
                onClick={() => toggleFAQ(index)}
              >
                <div className="flex justify-between items-center">
                  <h3 className="text-lg font-semibold text-primary">
                    ‚ùì {item.question}
                  </h3>
                  <svg
                    className={`w-6 h-6 transform transition-transform duration-200 ${
                      openIndex === index ? 'rotate-180' : ''
                    }`}
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </div>
              </button>
              {openIndex === index && (
                <div className="px-6 pb-4">
                  <p className="text-text-light whitespace-pre-line">
                    {item.answer}
                  </p>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  );
} 